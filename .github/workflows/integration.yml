name: Integration tests
on:
  push:
  pull_request:
    types: [ opened, labeled, synchronize ]
    branches:
      - main 
      - dev
  workflow_dispatch:

permissions: read-all

jobs:

  code_coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Cypress Test + Get Coverage
        uses: cypress-io/github-action@37c511bc322f112c2dd629d3610f4f096bc80096 # pin@v5
        with:
          working-directory: src
	  config: pageLoadTimeout=100000, baseUrl=http://localhost:3000
	  start: npm run dev:instrumented
          spec: |
            cypress/**/*.js

      - name: Set code coverage commit status
        working-directory: src
        run: npx -p check-code-coverage set-gh-status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # commit any changed files (i.e., badge)
      - name: Update code coverage badge
        working-directory: src
        run: npx update-badge

      # push changes (i.e., badge): https://github.com/mikeal/publish-to-github-action
      - uses: mikeal/publish-to-github-action@e5a27bbb5174edae8930d2250fc98a3a32478f81 # master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: 'feature/code-coverage'
        continue-on-error: true
        

  test_docker:
    name: Build Container as Test
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Debug Information
        run: |-
          echo "Current Github workspace: $GITHUB_WORKSPACE"
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
      - name: Google Authentication
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # v1
        id: auth
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.GOOGLE_WORKLOAD_SERVICE_ACCOUNT }}'
      - name: .env.production -> Source
        run: |-
          cd "$GITHUB_WORKSPACE/src"
          touch .env.production
          echo "SECRET=${{ secrets.SECRET }}" | tee -a .env.production
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" | tee -a .env.production
          echo "GOOGLE_PROVIDER_CLIENT_ID=${{ secrets.GOOGLE_PROVIDER_CLIENT_ID }}" | tee -a .env.production
          echo "GOOGLE_PROVIDER_CLIENT_SECRET=${{ secrets.GOOGLE_PROVIDER_CLIENT_SECRET }}" | tee -a .env.production
          echo "GOOGLE_PROVIDER_AUTHORIZATION_URL=${{ secrets.GOOGLE_PROVIDER_AUTHORIZATION_URL }}" | tee -a .env.production
          echo "FIREBASE_SERVICE_ACCOUNT_PROJECT_ID=${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROJECT_ID }}" | tee -a .env.production
          echo "FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY=${{ secrets.FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY }}" | tee -a .env.production
          echo "FIREBASE_SERVICE_ACCOUNT_CLIENT_EMAIL=${{ secrets.FIREBASE_SERVICE_ACCOUNT_CLIENT_EMAIL }}" | tee -a .env.production
          echo "Created .env.production to $GITHUB_WORKSPACE/src"
      - name: Source -> Docker Image
        run: |-
          DOCKER_BUILDKIT=1 docker build --target builder .
  run_linter:
    name: Linter + Commenter
    runs-on: ubuntu-latest
    permissions:
      "write-all"
    defaults:
      run:
        working-directory: src

    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: Setup Node
        uses: actions/setup-node@eeb10cff27034e7acf239c5d29f62154018672fd
        with:
          node-version: 16

      - name: Install Node Dependencies
        run: npm ci

      - name: Save Code Linting Report to JSON
        # npm script for ESLint
        # eslint --output-file eslint_report.json --format json src
        # See https://eslint.org/docs/user-guide/command-line-interface#options
        run: npm run lint-output
        continue-on-error: true 

      - name: Annotated linting code results
        uses: ataylorme/eslint-annotate-action@v2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "eslint_report.json"

      - name: Run linter for json Report
        run: |
          npm run lint-output
      - name: Upload ESLint json Report
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: eslint_report.json
          path: eslint_report.json
