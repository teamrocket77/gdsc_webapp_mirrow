name: Build Docker Container on Push and PR
on:
  push:
  pull_request:
    branches:
      - main 
      - dev
  workflow_dispatch:

jobs:

  integration_test:
    name: Integration Test
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run
        working-directory: src
        run: |
          npm ci
          npm run e2e:headless 
        #uses: cypress-io/github-action@v5
        #with:
         # working-directory: src
          #start: npm run dev
          #wait-on: 'http://localhost:3000'
          #wait-on-timeout: 120
          #spec: |
          #  cypress/**/frontend_tests/frontend.*js
          #config: supportFile=false

      - name: Coverage report text
        working-directory: src
        run: |
          echo "LIST ALL"
          ls -lha
          npm run coverage

      #commit any changed files (i.e., badge)
      - name: Update code coverage badge
        working-directory: src
        run: npx update-badge
      
      - uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.ref_name }}}
          
      - name: Set code coverage commit status
        working-directory: src
        run: npx -p check-code-coverage set-gh-status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test_docker:
    name: Build Container as Test
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Debug Information
        run: |-
          echo "Current Github workspace: $GITHUB_WORKSPACE"
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
      - name: Google Authentication
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # v1
        id: auth
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.GOOGLE_WORKLOAD_SERVICE_ACCOUNT }}'
      - name: Docker Authentication
        id: docker-auth
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b #pinv2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: .env.production -> Source
        run: |-
          cd "$GITHUB_WORKSPACE/src"
          touch .env.production
          echo "SECRET=${{ secrets.SECRET }}" | tee -a .env.production
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" | tee -a .env.production
          echo "GOOGLE_PROVIDER_CLIENT_ID=${{ secrets.GOOGLE_PROVIDER_CLIENT_ID }}" | tee -a .env.production
          echo "GOOGLE_PROVIDER_CLIENT_SECRET=${{ secrets.GOOGLE_PROVIDER_CLIENT_SECRET }}" | tee -a .env.production
          echo "GOOGLE_PROVIDER_AUTHORIZATION_URL=${{ secrets.GOOGLE_PROVIDER_AUTHORIZATION_URL }}" | tee -a .env.production
          echo "FIREBASE_SERVICE_ACCOUNT_PROJECT_ID=${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROJECT_ID }}" | tee -a .env.production
          echo "FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY=${{ secrets.FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY }}" | tee -a .env.production
          echo "FIREBASE_SERVICE_ACCOUNT_CLIENT_EMAIL=${{ secrets.FIREBASE_SERVICE_ACCOUNT_CLIENT_EMAIL }}" | tee -a .env.production
          echo "Created .env.production to $GITHUB_WORKSPACE/src"
      - name: Source -> Docker Image
        run: |-
          DOCKER_BUILDKIT=1 docker build . --platform linux/amd64
